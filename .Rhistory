cnetplot(kk,categorySize="geneNum",circular=TRUE)
emapplot(kk)
heatplot(kk,foldChange = FC)
upsetplot(kk)
# path
library(pathview)
pathview(gene.data = FC,
pathway.id = "hsa05202",
species = "hsa",
limit = list(gene=5, cpd=1))
gene.df <- bitr(generalbiomarkergenes, fromType = "SYMBOL",
toType = c("ENSEMBL", "ENTREZID"),
OrgDb = org.Hs.eg.db)
kk <- enrichKEGG(gene=gene.df$ENTREZID,pvalueCutoff = 0.05,pAdjustMethod = "none")
head(summary(kk))
# visualization
# FC
library(enrichplot)
library(DOSE)
top100generalbiomarkers=as.data.frame(top100generalbiomarkers)
colnames(top100generalbiomarkers)[1] <- "fold Change"
top100generalbiomarkers=cbind(top100generalbiomarkers,generalbiomarkergenes)
colnames(top100generalbiomarkers)[2] <- "genes"
FC <- top100generalbiomarkers$`fold Change`
names(FC) <- gene.df$ENTREZID
barplot(kk,showCategory=12)
dotplot(kk, showCategory=12)
cnetplot(kk,categorySize="geneNum",foldChange = FC)
cnetplot(kk,categorySize="geneNum",circular=TRUE)
emapplot(kk)
heatplot(kk,foldChange = FC)
upsetplot(kk)
# path
library(pathview)
pathview(gene.data = FC,
pathway.id = "hsa05202",
species = "hsa",
limit = list(gene=5, cpd=1))
kk3 <- enrichKEGG(gene=gene.df$ENTREZID,pvalueCutoff = 0.05,pAdjustMethod = "none")
head(summary(kk3))
barplot(kk3,showCategory=100)
dotplot(kk3, showCategory=12)
cnetplot(kk3,categorySize="geneNum")
emapplot(kk3)
barplot(kk3,showCategory=100)
View(vorinostat_annotation)
# copy biomarker and Biomarker3 from annotation to data
# barplot with diffrent tissues
library(readr)
library(rstudioapi)
wd = dirname(rstudioapi::getSourceEditorContext()$path)
vorinostat_annotation=read.csv2(paste0(wd,"/../data/biomarker.csv"),header = TRUE, quote="\"")
tissue=vorinostat_annotation$affected.Tissue..if.specific.
col=palette(rainbow(6))
table(tissue)
barplot(table(tissue), ylab="counts", main="affected tissues by biomarker", col=col, las=3)
######### with nones
vorinostat_annotation=read.csv2(paste0(wd,"/../data/Biomarker3.csv"),header = TRUE, quote="\"")
tissue=vorinostat_annotation$affected.Tissue..if.specific.
col=palette(rainbow(7))
table(tissue)
barplot(table(tissue), ylab="counts", main="affected tissues by biomarker", col=col, las=3)
# Franzi
# wd = ("C:/Users/franz/Documents/GitHub/project-02-group-05/Broad Analysis")
# Laura
wd = ("/Users/laura.plutowski/Desktop/Uni/4.Semester/projekt/project-02-group-05")
library(readr)
Untreated = readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated = readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
Metadata = read_tsv(paste0(wd,"/data/NCI_TPW_metadata.tsv"))
Drug_annotation = read.table(paste0(wd,"/data/drug_annotation.tsv"),
header = TRUE, sep ="\t", stringsAsFactors = TRUE)
library(readr)
library(rstudioapi)
wd = dirname(rstudioapi::getSourceEditorContext()$path)
vorinostat_annotation=read.csv2(paste0(wd,"/../data/Biomarkers.csv"),header = TRUE, quote="\"")
View(vorinostat_annotation)
tissue=vorinostat_annotation$affected.Tissue..if.specific.
col=palette(rainbow(15))
table(tissue)
barplot(table(tissue), ylab="counts", main="affected tissues by biomarker", col=col, las=3)
wd = dirname(rstudioapi::getSourceEditorContext()$path)
vorinostat_annotation=read.csv2(paste0(wd,"/../data/Biomarkers.csv"),header = TRUE, quote="\"")
tissue=vorinostat_annotation$affected.Tissue..if.specific.
col=palette(rainbow(9))
table(tissue)
barplot(table(tissue), ylab="counts", main="affected tissues by biomarker", col=col, las=3)
general.function=vorinostat_annotation$general.Function
col=palette(rainbow(20))
table(general.function)
barplot(table(general.function), ylab="counts", main="genneral function biomarker", col=col, las=3)
col=palette(rainbow(16))
table(general.function)
barplot(table(general.function), ylab="counts", main="genneral function biomarker", col=col, las=3)
library(RColorBrewer)
col=palette(rainbow(20))
table(general.function)
barplot(table(general.function), ylab="counts", main="genneral function biomarker", col=col, las=3)
library(BBmisc)
FCnorm <- normalize(FC, method= "scale")
install.packages(BBmisc)
install.packages("BBmisc")
install.packages("BBmisc")
library(BBmisc)
FCnorm <- normalize(FC, method= "scale")
library(BBmisc)
FCnorm <- normalize(FC, method= "scale")
library(BBmisc)
FCnorm <- normalize(FC, method= "scale")
knitr::opts_chunk$set( echo=TRUE)
knitr::opts_chunk$set( cache=TRUE)
boxplot(Treated,
xlab="sampels", ylab="gene expression",
main= "Gene expression treated celllines",
names= FALSE, xaxt= "n", boxwex=1, boxlty =0)
boxplot(Treated,
xlab="sampels", ylab="gene expression",
main= "Gene expression treated celllines",
names= FALSE, xaxt= "n")
# create FC data
FC_all = (Treated - Untreated)
FC_all_mean = colMeans(FC_all)
# create levels for coloring
drug <- Metadata$drug
palette(rainbow(15))
# create boxplot
par(mar=c(5, 4, 5, 9))
barplot( height = FC_all_mean, names= FALSE, col = drug, border = NA,
main= "Fold changes by treatment with 15 anticancer drugs",
xlab="sampels", ylab="mean Fold Change values")
library(readr)
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
#wd = ("C:/Users/franz/Documents/GitHub/project-02-group-05/Broad Analysis")
wd = ("/Users/laura.plutowski/Desktop/Uni/4.Semester/projekt/project-02-group-05")
library(readr)
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
Metadata = read.table(paste0(wd,"/data/NCI_TPW_metadata.tsv"),
header = TRUE, sep ="\t", stringsAsFactors = TRUE)
Treated <- as.data.frame(Treated)
Untreated <- as.data.frame(Untreated)
# create FC data
FC_all = (Treated - Untreated)
FC_all_mean = colMeans(FC_all)
# create levels for coloring
drug <- Metadata$drug
palette(rainbow(15))
# create boxplot
par(mar=c(5, 4, 5, 9))
barplot( height = FC_all_mean, names= FALSE, col = drug, border = NA,
main= "Fold changes by treatment with 15 anticancer drugs",
xlab="sampels", ylab="mean Fold Change values")
# create a legend
levels <- as.factor(levels(drug))
legend("topright", inset = c(-0.4,0.0), legend= levels(drug), xpd = TRUE,
pch=19, col = levels, title = "drugs")
plot(density(Untreated) ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
library(readr)
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
Metadata = read.table(paste0(wd,"/data/NCI_TPW_metadata.tsv"),
header = TRUE, sep ="\t", stringsAsFactors = TRUE)
Treated <- as.data.frame(Treated)
Untreated <- as.data.frame(Untreated)
plot(density(Untreated) ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
plot(density(Untreated) ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
lines(density(Treated), col = "red")
legend(x = 1, y = 1, legend = c("Untreated", "Treated"),
bty = "n", lty = 1, col = c("black", "red"), x.intersp = 0.5)
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
plot(density(Untreated),col="green" ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
lines(density(Treated), col = "red")
legend(x = 1, y = 1, legend = c("Untreated", "Treated"),
bty = "n", lty = 1, col = c("black", "red"), x.intersp = 0.5)
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
plot(density(Untreated),col="blue" ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
lines(density(Treated), col = "red")
legend(x = 1, y = 1, legend = c("Untreated", "Treated"),
bty = "n", lty = 1, col = c("blue", "red"), x.intersp = 0.5)
Treated_Vorinostat_biomarker <- Treated[generalbiomarkergenes,TreatedVorinostatcolumns]
Untreated_Vorinostat_biomarker <- Untreated[generalbiomarkergenes,UntreatedVorinostatcolumns]
plot(density(Untreated_Vorinostat_biomarker) ,xlab = "Gene expression",
main = "Effects of Vorinostat on biomarker gene expression")
lines(density(Treated_Vorinostat_biomarker), col = "red")
legend(x = 1, y = 1, legend = c("Untreated", "Treated"),
bty = "n", lty = 1, col = c("black", "red"), x.intersp = 0.5)
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
par(mar=c(5, 4, 5, 9))
plot(density(Untreated),col="blue" ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
lines(density(Treated), col = "red")
legend(x = 1, y = 1, legend = c("Untreated", "Treated"),
bty = "n", lty = 1, col = c("blue", "red"), x.intersp = 0.5)
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
par(mar=c(5, 4, 5, 9))
plot(density(Untreated),col="blue" ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
lines(density(Treated), col = "red")
legend("topright", inset = c(-0.4,0), legend = c("Untreated", "Treated"),
bty = "n", lty = 1, col = c("blue", "red"), x.intersp = 0.5)
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
par(mar=c(5, 4, 5, 9))
plot(density(Untreated),col="blue" ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
lines(density(Treated), col = "red")
#legend("topright", inset = c(-0.4,0), legend = c("Untreated", "Treated"),
bty = "n", lty = 1, col = c("blue", "red"), x.intersp = 0.5)
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
par(mar=c(5, 4, 5, 9))
plot(density(Untreated),col="blue" ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
lines(density(Treated), col = "red")
#legend("topright", inset = c(-0.4,0), legend = c("Untreated", "Treated"),
# bty = "n", lty = 1, col = c("blue", "red"), x.intersp = 0.5)
legend(inset = c(-0.4,0), legend=c("Untreated", "Treated") , xpd = TRUE,
pch=19, col =col = c("blue", "red") , title = "drugs")
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
par(mar=c(5, 4, 5, 9))
plot(density(Untreated),col="blue" ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
lines(density(Treated), col = "red")
#legend("topright", inset = c(-0.4,0), legend = c("Untreated", "Treated"),
# bty = "n", lty = 1, col = c("blue", "red"), x.intersp = 0.5)
legend("topright", inset = c(-0.4,0), legend=c("Untreated", "Treated") , xpd = TRUE,
pch=19, col =col = c("blue", "red") , title = "drugs")
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
par(mar=c(5, 4, 5, 9))
plot(density(Untreated),col="blue" ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
lines(density(Treated), col = "red")
#legend("topright", inset = c(-0.4,0), legend = c("Untreated", "Treated"),
# bty = "n", lty = 1, col = c("blue", "red"), x.intersp = 0.5)
legend("topright", inset = c(-0.4,0), legend=c("Untreated", "Treated") , xpd = TRUE,
pch=19, col = c("blue", "red") , title = "drugs")
Untreated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated <- readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
par(mar=c(5, 4, 5, 9))
plot(density(Untreated),col="blue" ,xlab = "Gene expression",
main = "comparison of treated and untreated gene expression ")
lines(density(Treated), col = "red")
legend("topright", inset = c(-0.4,0), legend=c("Untreated", "Treated") , xpd = TRUE,
pch=19, col = c("blue", "red"))
Treated_Vorinostat_biomarker <- Treated[generalbiomarkergenes,TreatedVorinostatcolumns]
Untreated_Vorinostat_biomarker <- Untreated[generalbiomarkergenes,UntreatedVorinostatcolumns]
plot(density(Untreated_Vorinostat_biomarker),col="blue" ,xlab = "Gene expression",
main = "Effects of Vorinostat on biomarker gene expression")
lines(density(Treated_Vorinostat_biomarker), col = "red")
legend("topright", inset = c(-0.4,0), legend=c("Untreated", "Treated") , xpd = TRUE,
pch=19, col = c("blue", "red"))
Treated_Vorinostat_biomarker <- Treated[generalbiomarkergenes,TreatedVorinostatcolumns]
Untreated_Vorinostat_biomarker <- Untreated[generalbiomarkergenes,UntreatedVorinostatcolumns]
par(mar=c(5, 4, 5, 9))
plot(density(Untreated_Vorinostat_biomarker),col="blue" ,xlab = "Gene expression",
main = "Effects of Vorinostat on biomarker gene expression")
lines(density(Treated_Vorinostat_biomarker), col = "red")
legend("topright", inset = c(-0.4,0), legend=c("Untreated", "Treated") , xpd = TRUE,
pch=19, col = c("blue", "red"))
TreatedVorinostat <- Treated[,TreatedVorinostatcolumns]
UntreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Untreated))
UntreatedVorinostat <- Untreated[,UntreatedVorinostatcolumns]
plot(density(UntreatedVorinostat) ,xlab = "Gene expression",
main = "Effects of Vorinostat on overall gene expression")
lines(density(TreatedVorinostat), col = "red")
legend(x = 1, y = 1, legend = c("Untreated", "Treated"),
bty = "n", lty = 1, col = c("black", "red"), x.intersp = 0.5)
TreatedVorinostat <- Treated[,TreatedVorinostatcolumns]
UntreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Untreated))
UntreatedVorinostat <- Untreated[,UntreatedVorinostatcolumns]
par(mar=c(5, 4, 5, 9))
plot(density(UntreatedVorinostat), col="blue" ,xlab = "Gene expression",
main = "Effects of Vorinostat on overall gene expression")
lines(density(TreatedVorinostat), col = "red")
legend("topright", inset = c(-0.4,0), legend=c("Untreated", "Treated") , xpd = TRUE,
pch=19, col = c("blue", "red"))
Treated_Leukemiabiomarker <- Treated[biomarkersLeukemiaGenes ,TreatedVorinostatcolumns]
boxplot(FC_target)
########################### Vorinostat target genes in FC matrix ###############################################
################################################################################################################
library(readr)
library(rstudioapi)
wd = dirname(rstudioapi::getSourceEditorContext()$path)
Drug_annotation = read.table(paste0(wd,"/data/drug_annotation.tsv"), header = TRUE, sep ="\t", stringsAsFactors = TRUE)
################################################################################################################
# search for HDAC in biomarkers
target <- grep(pattern = "HDAC",colnames(top100generalbiomarkers))
length(target)
# In drug annotation HDAC genes are mentioned as target of vorinostat, but these genes are not in our defined
# biomarkers, so know we want to check their FC values
###find target of vorinostat
target=Drug_annotation$target
target=as.data.frame(target)
# take row with vorinostat
target_vorinostat=target[9,]
target_vorinostat
# new vector with names as strings, because otherwise problem with spacer |
target_vorinostat=c("HDAC1","HDAC10","HDAC11","HDAC2","HDAC3","HDAC5","HDAC6","HDAC8","HDAC9")
### find FC values of targets
# creat FC data
FC =TreatedVorinostat - UntreatedVorinostat
FC= rowMeans(FC)
FC=as.data.frame(FC)
genes=row.names(FC)
FC_new=cbind(FC,genes)
# filter data
library(dplyr)
FC_target=as.data.frame(filter(FC_new, genes %in% target_vorinostat))
FC_target
library(readr)
library(rstudioapi)
wd = dirname(rstudioapi::getSourceEditorContext()$path)
Drug_annotation = read.table(paste0(wd,"/data/drug_annotation.tsv"), header = TRUE, sep ="\t", stringsAsFactors = TRUE)
target <- grep(pattern = "HDAC",colnames(top100generalbiomarkers))
length(target)
target <- grep(pattern = "HDAC",colnames(top100generalbiomarkers))
View(top100generalbiomarkers)
View(top100generalbiomarkers_withUporDown)
View(top100generalbiomarkers)
####Find top100 general biomarkers for all celllines:
library(readr)
library(rstudioapi)
wd = dirname(rstudioapi::getSourceEditorContext()$path)
#Load needed data:
# Franzi
Untreated_notnormalized = readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated_notnormalized = readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
Metadata = read_tsv(paste0(wd,"/data/NCI_TPW_metadata.tsv"))
# Laura
Untreated_notnormalized = readRDS(paste0(wd,"/../../data/NCI_TPW_gep_untreated.rds"))
Treated_notnormalized = readRDS(paste0(wd,"/../../data/NCI_TPW_gep_treated.rds"))
Metadata = read_tsv(paste0(wd,"/../../data/NCI_TPW_metadata.tsv"))
#We need a FC matrix that contains only the data from Vorinostat-treated celllines:
UntreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Untreated_notnormalized))
TreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Treated_notnormalized))
UntreatedVorinostat <- Untreated_notnormalized[,UntreatedVorinostatcolumns]
TreatedVorinostat <- Treated_notnormalized[,TreatedVorinostatcolumns]
FCVorinostat <- TreatedVorinostat - UntreatedVorinostat
# work with mean of the rows because we only want to compare the genes:
FCVorinostatabs= abs(FCVorinostat)
FCVorinostatmean <- apply(FCVorinostatabs, 1, mean)
# sort the values to get the 100 largest values:
sortedgeneralbiomarker <- sort(FCVorinostatmean, decreasing = TRUE)
sortedgeneralbiomarker <- as.matrix(sortedgeneralbiomarker)
#select the top 100 general biomarkers:
top100generalbiomarkers = sortedgeneralbiomarker[1:100,]
top100generalbiomarkers <- as.matrix(top100generalbiomarkers)
#create vector with gene names:
generalbiomarkergenes = row.names(top100generalbiomarkers)
############################################################################################################
### compare this biomarkers to the biomarkers without absolute values
### creat the other biomarkers
FCVorinostatmean_noabs= rowMeans(FCVorinostat)
# work with absolute value to find the highest values
# because we want to have the most up and down regulated genes
FC_abs= abs(FCVorinostatmean_noabs)
## sort the values to get the 100 largest values
sortedFC_abs <- sort(FC_abs, decreasing = TRUE)
sortedFC_abs <- as.matrix(sortedFC_abs)
# take the first 100 for biomarkers
biomarkers_FC = sortedFC_abs[1:100,]
biomarkers_FC <- as.matrix(biomarkers_FC)
# see that the last ones have very similar values
# creat vector with gene names
biomarkers_FC_genes= row.names(biomarkers_FC)
### compairison
setequal(biomarkers_FC_genes,generalbiomarkergenes)
# returs false
diff1= setdiff(biomarkers_FC_genes,generalbiomarkergenes)
length(diff1)
# only 4 diffrent biomarkers
diff1
# biomarkers in biomarkers_FC_genes but not in generalbiomarkergenes
diff2= setdiff(generalbiomarkergenes,biomarkers_FC_genes)
length(diff2)
# only 4 diffrent biomarkers
diff2
# biomarkers in biomarkers_FC_genes but not in generalbiomarkergenes
target <- grep(pattern = "HDAC",colnames(top100generalbiomarkers))
length(target)
target=Drug_annotation$target
target=as.data.frame(target)
target_vorinostat=target[9,]
target_vorinostat
target_vorinostat=c("HDAC1","HDAC10","HDAC11","HDAC2","HDAC3","HDAC5","HDAC6","HDAC8","HDAC9")
FC =TreatedVorinostat - UntreatedVorinostat
FC= rowMeans(FC)
FC=as.data.frame(FC)
genes=row.names(FC)
FC_new=cbind(FC,genes)
# filter data
library(dplyr)
FC_target=as.data.frame(filter(FC_new, genes %in% target_vorinostat))
FC_target
FC =TreatedVorinostat - UntreatedVorinostat
FC= rowMeans(FC)
FC=as.data.frame(FC)
genes=row.names(FC)
FC_new=cbind(FC,genes)
library(dplyr)
FC_target=as.data.frame(filter(FC_new, genes %in% target_vorinostat))
abc=as.data.frame(filter(FC_new, genes %in% target_vorinostat))
View(abc)
# search for HDAC in biomarkers
target <- grep(pattern = "HDAC",colnames(top100generalbiomarkers))
length(target)
target_vorinostat=c("HDAC1","HDAC10","HDAC11","HDAC2","HDAC3","HDAC5","HDAC6",
"HDAC8","HDAC9")
### find FC values of targets
# creat FC data
FC_meanrow = as.data.frame(FC_meanrow)
genes = row.names(FC_meanrow)
FC_new=cbind(FC_meanrow,genes)
```
# filter data
library(dplyr)
FC_target = as.data.frame(filter(FC_new, genes %in% target_vorinostat))
FC_target
FC_target = as.data.frame(filter(FC_new, genes %in% target_vorinostat))
FC_target
# Franzi
# wd = ("C:/Users/franz/Documents/GitHub/project-02-group-05/Broad Analysis")
# Laura
wd = ("/Users/laura.plutowski/Desktop/Uni/4.Semester/projekt/project-02-group-05")
library(readr)
Untreated = readRDS(paste0(wd,"/data/NCI_TPW_gep_untreated.rds"))
Treated = readRDS(paste0(wd,"/data/NCI_TPW_gep_treated.rds"))
Metadata = read_tsv(paste0(wd,"/data/NCI_TPW_metadata.tsv"))
Drug_annotation = read.table(paste0(wd,"/data/drug_annotation.tsv"),
header = TRUE, sep ="\t", stringsAsFactors = TRUE)
Drug_annotation$Mechanism[grep(Drug_annotation$Drug, pattern= "vorinostat")]
Drug_annotation$target[grep(Drug_annotation$Drug, pattern= "vorinostat")]
Drug_annotation$indication[grep(Drug_annotation$Drug, pattern= "vorinostat")]
Metadata <- as.matrix(Metadata)
Metadatatissue <- Metadata[1:819,"tissue"]
Treatedwithtissue <- rbind(Treated, Metadatatissue)
TreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Treatedwithtissue))
TreatedVorinostattissue <- Treatedwithtissue[,TreatedVorinostatcolumns]
#Create a pie chart:
palette(rainbow(9))
pie(table(TreatedVorinostattissue["Metadatatissue",]),
main="Tissue types of Vorinostat-treated samples",
radius=1,
cex=0.8)
TreatedVorinostat <- Treated[,TreatedVorinostatcolumns]
UntreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Untreated))
UntreatedVorinostat <- Untreated[,UntreatedVorinostatcolumns]
par(mar=c(5, 4, 5, 9))
plot(density(UntreatedVorinostat), col="blue" ,xlab = "Gene expression",
main = "Effects of Vorinostat on overall gene expression")
lines(density(TreatedVorinostat), col = "red")
legend("topright", inset = c(-0.4,0), legend=c("Untreated", "Treated") , xpd = TRUE,
pch=19, col = c("blue", "red"))
UntreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Untreated))
TreatedVorinostatcolumns <- grep(pattern = "vorinostat",colnames(Treated))
UntreatedVorinostat <- Untreated[,UntreatedVorinostatcolumns]
TreatedVorinostat <- Treated[,TreatedVorinostatcolumns]
FC <- TreatedVorinostat - UntreatedVorinostat
library(BBmisc)
FCnorm <- normalize(FC, method= "scale")
qqnorm(FCnorm)
Untreatedcolnames <- sub(pattern = "_0nM_24h", "", colnames(UntreatedVorinostat))
Treatedcolnames <- sub(pattern = "_5000nM_24h", "", colnames(TreatedVorinostat))
identical(Untreatedcolnames, Treatedcolnames)
identical(Untreatedcolnames, Treatedcolnames)
VorinostatTotal <- cbind(UntreatedVorinostat, TreatedVorinostat)
col_untreated = grep ('_0nM',colnames(VorinostatTotal))
col_treated = grep ('_5000nM',colnames(VorinostatTotal))
t.test.Vorinostat = apply(VorinostatTotal, 1, function(x) t.test(x[col_untreated],
x[col_treated],
paired = TRUE,
alternative = "two.sided"))
FCVorinostatabs= abs(FC)
FCVorinostatmean <- apply(FCVorinostatabs, 1, mean)
#sort the values to get the 100 largest values:
sortedgeneralbiomarker <- sort(FCVorinostatmean, decreasing = TRUE)
sortedgeneralbiomarker <- as.matrix(sortedgeneralbiomarker)
#select the top 100 general biomarkers:
top100generalbiomarkers = sortedgeneralbiomarker[1:100,]
top100generalbiomarkers <- as.matrix(top100generalbiomarkers)
head(top100generalbiomarkers)
generalbiomarkergenes = row.names(top100generalbiomarkers)
# search for HDAC in biomarkers
target <- grep(pattern = "HDAC",colnames(top100generalbiomarkers))
length(target)
target_vorinostat=c("HDAC1","HDAC10","HDAC11","HDAC2","HDAC3","HDAC5","HDAC6",
"HDAC8","HDAC9")
### find FC values of targets
# creat FC data
FC_meanrow = as.data.frame(FC_meanrow)
genes = row.names(FC_meanrow)
FC_new=cbind(FC_meanrow,genes)
# filter data
library(dplyr)
install.packages("dplyr")
install.packages("dplyr")
# filter data
library(dplyr)
library(dplyr)
